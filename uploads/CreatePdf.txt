private void createPdf() {
        try {
            int hgt = 500 + (Order_Outlet_Filter.size() * 40);

            // create a new document
            PdfDocument document = new PdfDocument();
            int widthSize = 600;
            // crate a page description
            PdfDocument.PageInfo pageInfo = new PdfDocument.PageInfo.Builder(widthSize, hgt, 1).create();
            // start a page
            PdfDocument.Page page = document.startPage(pageInfo);
            Canvas canvas = page.getCanvas();
            Paint paint = new Paint();

            paint.setColor(Color.BLACK);
            paint.setTextSize(17);

            int x = 10;
            int y = 50;

            canvas.drawText(storeName, x, y, paint);

            paint.setColor(Color.BLACK);
            paint.setTextSize(14);
            paint.setTextAlign(Paint.Align.LEFT);

            y = y + 30;
            canvas.drawText("Address :", x, y, paint);
            paint.setColor(Color.DKGRAY);
            paint.setTextSize(14);
            y = y + 20;

            String[] lines = Split(address, 60, address.length());
            for (int i = 0; i < lines.length; i++) {
                canvas.drawText(lines[i], x, y, paint);
                y = y + 20;

            }
            canvas.drawText(phone, x, y, paint);
            y = y + 30;

            paint.setColor(Color.BLACK);
            paint.setStrokeWidth(5);
            canvas.drawLine(0, y, widthSize, y, paint);


            paint.setColor(Color.LTGRAY);
            paint.setStrokeWidth(40);
            canvas.drawLine(0, y + 30, widthSize, y + 30, paint);

            y = y + 35;
            paint.setColor(Color.BLACK);
            paint.setTextSize(15);
            canvas.drawText("" + billnumber.getText().toString(), x, y, paint);
            canvas.drawText("" + invoicedate.getText().toString(), (widthSize / 2) + 100, y, paint);

            y = y + 25;
            paint.setColor(Color.BLACK);
            paint.setStrokeWidth(1);
            canvas.drawLine(0, y, widthSize, y, paint);


            String space = "     ";
            y = y + 20;
            paint.setColor(Color.BLACK);
            paint.setTextSize(15);

            canvas.drawText("Item", x, y, paint);
            canvas.drawText("Qty", (widthSize / 2) + 20, y, paint);
            canvas.drawText("Rate", (widthSize / 2) + 70, y, paint);
            canvas.drawText("GST", (widthSize / 2) + 150, y, paint);
            canvas.drawText("Total", (widthSize / 2) + 200, y, paint);


            y = y + 10;
            paint.setColor(Color.BLACK);
            canvas.drawLine(0, y, widthSize, y, paint);

            for (int i = 0; i < Order_Outlet_Filter.size(); i++) {

                y = y + 20;
                paint.setColor(Color.DKGRAY);
                paint.setTextSize(14);


                String name = Order_Outlet_Filter.get(i).getName() + "                               ";
                name = name.substring(0, name.length() - String.valueOf(Order_Outlet_Filter.get(i).getName()).length());


                String qtyValue = String.valueOf(Order_Outlet_Filter.get(i).getQty());
                String qty = "     " + qtyValue;
                qty = qty.substring(qtyValue.length(), qty.length());

                String rateValue = String.valueOf(formatter.format(Order_Outlet_Filter.get(i).getRate()));
                String rate = "           " + rateValue;
                rate = (rate.substring(rateValue.length(), rate.length()));

                String amtValue = String.valueOf(formatter.format(Order_Outlet_Filter.get(i).getAmount()));
                String amt = "           " + amtValue;
                amt = (amt.substring(amtValue.length(), amt.length()));

                Log.e("Values length: ", "item: " + name.length() + " qty: " + qty.length() + " rate: " + rate.length() + " amt : " + amt.length());

                // canvas.drawText(name + qty + rate + amt, x, y, paint);


                canvas.drawText("" + Order_Outlet_Filter.get(i).getName(), x, y, paint);
                canvas.drawText("" + Order_Outlet_Filter.get(i).getQty(), (widthSize / 2) + 20, y, paint);
                canvas.drawText("" + formatter.format(Order_Outlet_Filter.get(i).getRate()), (widthSize / 2) + 70, y, paint);
                canvas.drawText("" + formatter.format(Order_Outlet_Filter.get(i).getTax()), (widthSize / 2) + 150, y, paint);
                canvas.drawText("" + formatter.format(Order_Outlet_Filter.get(i).getAmount()), (widthSize / 2) + 200, y, paint);


            }


            y = y + 20;
            paint.setColor(Color.DKGRAY);
            canvas.drawLine(0, y, widthSize, y, paint);

            paint.setColor(Color.DKGRAY);

            y = y + 30;
            canvas.drawText("SubTotal", x, y, paint);
            canvas.drawText(subtotal.getText().toString(), (widthSize / 2) + 150, y, paint);

            y = y + 30;
            canvas.drawText("Total Item", x, y, paint);
            canvas.drawText(totalitem.getText().toString(), (widthSize / 2) + 150, y, paint);
            y = y + 30;
            canvas.drawText("Total Qty", x, y, paint);
            canvas.drawText(totalqty.getText().toString(), (widthSize / 2) + 150, y, paint);

            for (int i = 0; i < taxList.size(); i++) {
                y = y + 30;
                canvas.drawText(taxList.get(i).getTax_Type(), x, y, paint);
                canvas.drawText("â‚¹" + formatter.format(taxList.get(i).getTax_Amt()), (widthSize / 2) + 150, y, paint);

            }

            y = y + 30;

            if (cashDisc > 0) {
                canvas.drawText("Cash Discount", x, y, paint);
                canvas.drawText(cashdiscount.getText().toString(), (widthSize / 2) + 150, y, paint);
                y = y + 20;
            }
            paint.setColor(Color.BLACK);
            paint.setStrokeWidth(5);
            canvas.drawLine(0, y, widthSize, y, paint);

            paint.setTextSize(16);
            y = y + 30;
            canvas.drawText("Net Amount", x, y, paint);
            canvas.drawText(netamount.getText().toString(), (widthSize / 2) + 150, y, paint);

            y = y + 20;
            paint.setColor(Color.BLACK);
            paint.setStrokeWidth(5);
            canvas.drawLine(0, y, widthSize, y, paint);

            //canvas.drawt
            // finish the page
            document.finishPage(page);

            // write the document content
            String directory_path = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOCUMENTS) + "/hap/";
            File file = new File(directory_path);

            deleteRecursive(file);

            if (!file.exists()) {
                file.mkdirs();
            }
            String targetPdf = directory_path + System.currentTimeMillis() + "bill.pdf";
            File filePath = new File(targetPdf);


            document.writeTo(new FileOutputStream(filePath));
            Toast.makeText(this, "Done", Toast.LENGTH_LONG).show();

            // close the document
            document.close();


            Uri fileUri = FileProvider.getUriForFile(this, this.getApplicationContext().getPackageName() + ".provider", filePath);


            Intent intent = ShareCompat.IntentBuilder.from(this)
                    .setType("*/*")
                    .setStream(fileUri)
                    .setChooserTitle("Choose bar")
                    .createChooserIntent()
                    .addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);

            startActivity(intent);
        } catch (Exception e) {
            Log.e("main", "error " + e.toString());
            Toast.makeText(this, "Something wrong: " + e.toString(), Toast.LENGTH_LONG).show();
        }

    }